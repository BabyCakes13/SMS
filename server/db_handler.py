"""Module which manages the information sent by the Flask server."""
import flask_pymongo
import pymongo
from util import reader


class Database:
    """Enables adding an object of the type metrics, time and id to the database,
    configuring the database with user and ur,
     get information about the data."""

    def __init__(self, app):
        """Configures the mongodb name and uri
        using the reader in client."""

        self.app = app

        read = reader.Reader()

        self.app.config['MONGODB_NAME'] = read.get_d_value()[0]
        self.app.config['MONGO_URI'] = read.get_d_value()[1]

        try:
            self.database = flask_pymongo.PyMongo(self.app)
            self.handler = self.database.db.packets
        except (pymongo.errors.InvalidURI,
                pymongo.errors.InvalidName,
                pymongo.errors.ConnectionFailure):
            print("Invalid database URI or database name.")
            exit(-1)

    def add_pack(self, packet):
        """Adds a packet to the database."""

        self.handler.insert(packet)

    def get_pack(self, packet_id):
        """Returns a packet from the database
                with a specific given ID."""

        packets = self.handler.find({'ID': packet_id})

        return packets

    def get_all(self):
        """Returns all packets from the database."""

        pack_id = self.handler.distinct('ID')
        pack_info = []

        for ids in pack_id:
            pack_info.append(self.handler.find({'ID': ids}).limit(1))

        return pack_info

    @classmethod
    def delete_dbid(cls, packet):
        """Deletes the id generated by the database."""

        new_packet = packet
        del new_packet['_id']
        return new_packet

